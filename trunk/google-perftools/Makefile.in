# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Note: for every library we create, we're explicit about what symbols
# we export.  In order to avoid complications with C++ mangling, we always
# use the regexp for of specifying symbols.
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LN_S = @LN_S@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
RC = @RC@
STRIP = @STRIP@
VERSION = @VERSION@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

# Make sure that when we re-make ./configure, we get the macros we need
ACLOCAL_AMFLAGS = -I `pwd`/../autoconf

# This is so we can #include <google/foo>
AM_CPPFLAGS = -I$(top_srcdir)/src

googleincludedir = $(includedir)/google
# The .h files you want to install (that is, .h files that people
# who install this package can include in their own applications.)
# We'll add to this later, on a library-by-library basis
googleinclude_HEADERS = $(SG_STACKTRACE_INCLUDES) $(SG_TCMALLOC_MINIMAL_INCLUDES) $(SG_TCMALLOC_INCLUDES) $(SG_CPU_PROFILER_INCLUDES)

perftoolsincludedir = $(googleincludedir)/perftools
# The 'private' header files go into /usr/local/include/google/perftools.
# We'll add to this later, on a library-by-library basis
perftoolsinclude_HEADERS = $(SGP_STACKTRACE_INCLUDES) $(SGP_TCMALLOC_MINIMAL_INCLUDES) $(SGP_TCMALLOC_INCLUDES) $(SGP_CPU_PROFILER_INCLUDES)

docdir = $(prefix)/doc/$(PACKAGE)-$(VERSION)
# This is for HTML and other documentation you want to install.
# Add your documentation files (in doc/) in addition to these
# top-level boilerplate files.  Also add a TODO file if you have one.
# We'll add to this later, on a library-by-library basis

### Documentation

### Documentation

# I don't know how to say "distribute the .dot files but don't install them";
# noinst doesn't seem to work with data.  I separate them out anyway, in case
# one day we figure it out.  Regardless, installing the dot files isn't the
# end of the world.

### Documentation (above and beyond tcmalloc_minimal documentation)
dist_doc_DATA = AUTHORS COPYING ChangeLog INSTALL NEWS README TODO doc/index.html  doc/tcmalloc.html \
                 doc/overview.gif \
                 doc/pageheap.gif \
                 doc/spanmap.gif \
                 doc/threadheap.gif \
                 doc/t-test1.times.txt \
                 doc/tcmalloc-opspercpusec.vs.threads.1024.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.128.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.131072.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.16384.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.2048.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.256.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.32768.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.4096.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.512.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.64.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.65536.bytes.png 	\
                 doc/tcmalloc-opspercpusec.vs.threads.8192.bytes.png 	\
                 doc/tcmalloc-opspersec.vs.size.1.threads.png 		\
                 doc/tcmalloc-opspersec.vs.size.12.threads.png 		\
                 doc/tcmalloc-opspersec.vs.size.16.threads.png 		\
                 doc/tcmalloc-opspersec.vs.size.2.threads.png 		\
                 doc/tcmalloc-opspersec.vs.size.20.threads.png 		\
                 doc/tcmalloc-opspersec.vs.size.3.threads.png 		\
                 doc/tcmalloc-opspersec.vs.size.4.threads.png 		\
                 doc/tcmalloc-opspersec.vs.size.5.threads.png 		\
                 doc/tcmalloc-opspersec.vs.size.8.threads.png\
doc/overview.dot \
                 doc/pageheap.dot \
                 doc/spanmap.dot \
                 doc/threadheap.dot\
doc/heap_profiler.html \
                 doc/heap-example1.png \
                 doc/heap_checker.html\
doc/cpu_profiler.html \
                 doc/pprof-test-big.gif \
                 doc/pprof-test.gif \
                 doc/pprof-vsnprintf-big.gif \
                 doc/pprof-vsnprintf.gif


# The libraries (.so's) you want to install
# We'll add to this later, on a library-by-library basis

### Making the library

### Making the library

### Making the library

### Making the library
lib_LTLIBRARIES = libstacktrace.la libtcmalloc_minimal.la libtcmalloc.la libprofiler.la

# unittests you want to run when people type 'make check'.
# TESTS is for binary unittests, check_SCRIPTS for script-based unittests.
# TESTS_ENVIRONMENT sets environment variables for when you run unittest,
# but it only seems to take effect for *binary* unittests (argh!)
# We'll add to this later, on a library-by-library basis

### Unittests

### Unittests

# performance/unittests originally from ptmalloc2

### Unittests
TESTS = stacktrace_unittest malloc_unittest tcmalloc_unittest tcmalloc_large_unittest ptmalloc_unittest1 ptmalloc_unittest2 addressmap_unittest


### Unittests
check_SCRIPTS = heap-profiler_unittest_sh heap_checker_unittest_sh heap-checker-death_unittest profiler_unittest_sh
TESTS_ENVIRONMENT = 
# Every time you add a unittest to check_SCRIPTS, add it here too
noinst_SCRIPTS = src/tests/heap-profiler_unittest.sh src/tests/heap-checker_unittest.sh src/tests/heap-checker-death_unittest.sh src/tests/profiler_unittest.sh

### ------- stack trace

### The header files we use.  We divide into categories based on directory
S_STACKTRACE_INCLUDES = 
SG_STACKTRACE_INCLUDES = src/google/stacktrace.h
SGP_STACKTRACE_INCLUDES = src/config.h
STACKTRACE_INCLUDES = $(S_STACKTRACE_INCLUDES) $(SG_STACKTRACE_INCLUDES) $(SGP_STACKTRACE_INCLUDES)
libstacktrace_la_SOURCES = src/stacktrace.cc \
                           $(STACKTRACE_INCLUDES)

STACKTRACE_SYMBOLS = '(GetStackTrace)'
libstacktrace_la_LDFLAGS = -export-symbols-regex $(STACKTRACE_SYMBOLS)
STACKTRACE_UNITTEST_INLCUDES = $(STACKTRACE_INCLUDES) \
                               src/base/commandlineflags.h \
                               src/base/logging.h

stacktrace_unittest_SOURCES = src/tests/stacktrace_unittest.cc \
                              $(STACKTRACE_UNITTEST_INLCUDES)

stacktrace_unittest_LDADD = libstacktrace.la

### ------- tcmalloc_minimal (thread-caching malloc)

### The header files we use.  We divide into categories based on directory
S_TCMALLOC_MINIMAL_INCLUDES = src/config.h \
                              src/internal_logging.h \
                              src/system-alloc.h \
                              src/internal_spinlock.h \
                              src/base/commandlineflags.h \
                              src/base/basictypes.h \
                              src/pagemap.h \
                              src/maybe_threads.h

SG_TCMALLOC_MINIMAL_INCLUDES = src/google/malloc_hook.h \
                               src/google/malloc_extension.h \
                               src/google/stacktrace.h

SGP_TCMALLOC_MINIMAL_INCLUDES = src/google/perftools/hash_set.h
TCMALLOC_MINIMAL_INCLUDES = $(S_TCMALLOC_MINIMAL_INCLUDES) $(SG_TCMALLOC_MINIMAL_INCLUDES) $(SGP_TCMALLOC_MINIMAL_INCLUDES)
libtcmalloc_minimal_la_SOURCES = src/internal_logging.cc \
                                 src/system-alloc.cc \
                                 src/tcmalloc.cc \
                                 src/malloc_hook.cc \
                                 src/malloc_extension.cc \
                                 src/maybe_threads.cc \
                                 $(TCMALLOC_MINIMAL_INCLUDES)

libtcmalloc_minimal_la_CXXFLAGS = $(PTHREAD_CFLAGS) -DNDEBUG
TCMALLOC_MINIMAL_SYMBOLS = '(malloc|free|realloc|calloc|cfree|memalign|valloc|pvalloc|posix_memalign|malloc_stats|MallocExtension|MallocHook)'
libtcmalloc_minimal_la_LDFLAGS = $(PTHREAD_CFLAGS) -export-symbols-regex $(TCMALLOC_MINIMAL_SYMBOLS)
libtcmalloc_minimal_la_LIBADD = $(PTHREAD_LIBS) libstacktrace.la
MALLOC_UNITEST_INCLUDES = src/config.h \
                          src/google/malloc_extension.h \
                          src/google/malloc_hook.h \
                          src/base/basictypes.h \
                          src/google/perftools/hash_set.h \
                          src/maybe_threads.h

malloc_unittest_SOURCES = src/tests/tcmalloc_unittest.cc \
                          src/malloc_hook.cc \
                          src/malloc_extension.cc \
                          src/maybe_threads.cc \
                          $(MALLOC_UNITTEST_INCLUDES)

malloc_unittest_CXXFLAGS = $(PTHREAD_CFLAGS)
malloc_unittest_LDFLAGS = $(PTHREAD_CFLAGS)
malloc_unittest_LDADD = $(PTHREAD_LIBS)
TCMALLOC_UNITTEST_INCLUDES = src/google/malloc_extension.h
tcmalloc_unittest_SOURCES = src/tests/tcmalloc_unittest.cc \
                            $(TCMALLOC_UNITTEST_INCLUDES)

tcmalloc_unittest_CXXFLAGS = $(PTHREAD_CFLAGS)
tcmalloc_unittest_LDFLAGS = $(PTHREAD_CFLAGS)
tcmalloc_unittest_LDADD = libtcmalloc.la $(PTHREAD_LIBS)
tcmalloc_large_unittest_SOURCES = src/tests/tcmalloc_large_unittest.cc
tcmalloc_large_unittest_CXXFLAGS = $(PTHREAD_CFLAGS)
tcmalloc_large_unittest_LDFLAGS = $(PTHREAD_CFLAGS)
tcmalloc_large_unittest_LDADD = libtcmalloc.la $(PTHREAD_LIBS)
PTMALLOC_UNITTEST_INCLUDES = src/tests/ptmalloc/t-test.h \
                             src/tests/ptmalloc/thread-m.h \
                             src/tests/ptmalloc/lran2.h \
                             src/tests/ptmalloc/thread-st.h \
                             src/tests/ptmalloc/malloc-machine.h

ptmalloc_unittest1_SOURCES = src/tests/ptmalloc/t-test1.c \
                             $(PTMALLOC_UNITTEST_INCLUDES)

ptmalloc_unittest1_CFLAGS = $(PTHREAD_CFLAGS) -DUSE_PTHREADS
ptmalloc_unittest1_LDFLAGS = $(PTHREAD_CFLAGS)
ptmalloc_unittest1_LDADD = $(PTHREAD_LIBS)
ptmalloc_unittest2_SOURCES = src/tests/ptmalloc/t-test2.c \
                             $(PTMALLOC_UNITTEST_INCLUDES)

ptmalloc_unittest2_CFLAGS = $(PTHREAD_CFLAGS) -DUSE_PTHREADS
ptmalloc_unittest2_LDFLAGS = $(PTHREAD_CFLAGS)
ptmalloc_unittest2_LDADD = $(PTHREAD_LIBS)

### ------- tcmalloc (thread-caching malloc + heap profiler + heap checker)

### The header files we use.  We divide into categories based on directory
S_TCMALLOC_INCLUDES = src/config.h \
                      src/internal_logging.h \
                      src/system-alloc.h \
                      src/internal_spinlock.h \
                      src/pagemap.h \
                      src/heap-profiler-inl.h \
                      src/addressmap-inl.h \
                      src/base/basictypes.h \
                      src/base/commandlineflags.h \
                      src/base/logging.h \
                      src/base/googleinit.h \
                      src/base/elfcore.h \
                      src/base/linux_syscall_support.h \
                      src/base/linuxthreads.h \
                      src/base/thread_lister.h \
                      src/maybe_threads.h

SG_TCMALLOC_INCLUDES = src/google/malloc_hook.h \
                       src/google/malloc_extension.h \
                       src/google/heap-profiler.h \
                       src/google/heap-checker.h \
                       src/google/stacktrace.h

SGP_TCMALLOC_INCLUDES = src/google/perftools/hash_set.h
TCMALLOC_INCLUDES = $(S_TCMALLOC_INCLUDES) $(SG_TCMALLOC_INCLUDES) $(SGP_TCMALLOC_INCLUDES)
libtcmalloc_la_SOURCES = src/internal_logging.cc \
                         src/system-alloc.cc \
                         src/tcmalloc.cc \
                         src/malloc_hook.cc \
                         src/malloc_extension.cc \
                         src/maybe_threads.cc \
                         src/heap-profiler.cc \
                         src/heap-checker.cc \
                         src/heap-checker-bcad.cc \
                         src/base/linuxthreads.c \
                         src/base/thread_lister.c \
                         $(TCMALLOC_INCLUDES)

libtcmalloc_la_CXXFLAGS = $(PTHREAD_CFLAGS) -DNDEBUG
TCMALLOC_SYMBOLS = '(malloc|free|realloc|calloc|cfree|memalign|valloc|pvalloc|posix_memalign|malloc_stats|MallocExtension|MallocHook|HeapProfilerStart|HeapProfilerStop|HeapProfilerDump|GetHeapProfile|HeapCleaner|HeapLeakChecker)'
libtcmalloc_la_LDFLAGS = $(PTHREAD_CFLAGS) -export-symbols-regex $(TCMALLOC_SYMBOLS)
libtcmalloc_la_LIBADD = $(PTHREAD_LIBS) libstacktrace.la
ADDRESSMAP_UNITTEST_INCLUDES = src/addressmap-inl.h \
                               src/base/logging.h \
                               src/base/commandlineflags.h

addressmap_unittest_SOURCES = src/tests/addressmap_unittest.cc \
                              $(ADDRESSMAP_UNITTEST_INCLUDES)

addressmap_unittest_CXXFLAGS = -g

# These are sub-programs used by heap-profiler_unittest.sh
HEAP_PROFILER_UNITTESTS = heap-profiler_unittest

HEAP_PROFILER_UNITTEST_INCLUDES = src/google/heap-profiler.h
heap_profiler_unittest_SOURCES = src/tests/heap-profiler_unittest.cc \
                                 $(HEAP_PROFILER_UNITTEST_INCLUDES)

heap_profiler_unittest_CXXFLAGS = -g
heap_profiler_unittest_LDFLAGS = -g $(PTHREAD_CFLAGS)
heap_profiler_unittest_LDADD = libtcmalloc.la $(PTHREAD_LIBS)

# These are sub-programs used by heap-checker_unittest.sh
HEAP_CHECKER_UNITTESTS = heap-checker_unittest

HEAP_CHECKER_UNITTEST_INCLUDES = src/config.h \
                                 src/base/logging.h \
                                 src/base/googleinit.h \
                                 src/google/heap-profiler.h \
                                 src/google/heap-checker.h

heap_checker_unittest_SOURCES = src/tests/heap-checker_unittest.cc \
                                $(HEAP_CHECKER_UNITTEST_INCLUDES)

heap_checker_unittest_CXXFLAGS = -g $(PTHREAD_CFLAGS)
heap_checker_unittest_LDFLAGS = -g $(PTHREAD_CFLAGS)
# tcmalloc has to be specified last!
heap_checker_unittest_LDADD = $(PTHREAD_LIBS) -ltcmalloc

### ------- CPU profiler

### The header files we use.  We divide into categories based on directory
S_CPU_PROFILER_INCLUDES = src/config.h \
                          src/base/commandlineflags.h \
                          src/base/googleinit.h \
                          src/base/logging.h

SG_CPU_PROFILER_INCLUDES = src/google/profiler.h \
                           src/google/stacktrace.h

SGP_CPU_PROFILER_INCLUDES = 
CPU_PROFILER_INCLUDES = $(S_CPU_PROFILER_INCLUDES) $(SG_CPU_PROFILER_INCLUDES) $(SGP_CPU_PROFILER_INCLUDES)
libprofiler_la_SOURCES = src/profiler.cc \
                         src/stacktrace.cc \
                         $(CPU_PROFILER_INCLUDES)

CPU_PROFILER_SYMBOLS = '(ProfilerStart|ProfilerStop|ProfilerEnable|ProfilerDisable|ProfilerFlush|ProfilerRegisterThread|ProfilerThreadState)'
libprofiler_la_LDFLAGS = -export-symbols-regex $(CPU_PROFILER_SYMBOLS)

# These are sub-programs used by profiler_unittest.sh
PROFILER_UNITTESTS = profiler1_unittest profiler2_unittest profiler3_unittest \
                     profiler4_unittest


PROFILER_UNITTEST_INCLUDES = src/config.h \
                            src/google/profiler.h

PROFILER_UNITTEST_SRCS = src/tests/profiler_unittest.cc \
                        $(PROFILER_UNITTEST_INCLUDES)

profiler1_unittest_SOURCES = $(PROFILER_UNITTEST_SRCS)
profiler1_unittest_CXXFLAGS = -g
profiler1_unittest_LDADD = libprofiler.la
profiler2_unittest_SOURCES = $(PROFILER_UNITTEST_SRCS)
profiler2_unittest_CXXFLAGS = -g
profiler2_unittest_LDADD = -lprofiler
profiler3_unittest_SOURCES = $(PROFILER_UNITTEST_SRCS)
profiler3_unittest_CXXFLAGS = -g $(PTHREAD_CFLAGS) -DWITH_THREADS
profiler3_unittest_LDFLAGS = $(PTHREAD_CFLAGS)
profiler3_unittest_LDADD = libprofiler.la $(PTHREAD_LIBS)
profiler4_unittest_SOURCES = $(PROFILER_UNITTEST_SRCS)
profiler4_unittest_CXXFLAGS = -g $(PTHREAD_CFLAGS) -DWITH_THREADS
profiler4_unittest_LDFLAGS = $(PTHREAD_CFLAGS)
profiler4_unittest_LDADD = -lprofiler $(PTHREAD_LIBS)

### Documentation
dist_man_MANS = doc/pprof.1

# This should always include $(TESTS), but may also include other
# binaries that you compile but don't want automatically installed.
# We'll add to this later, on a library-by-library basis
noinst_PROGRAMS = $(TESTS) $(PROFILER_UNITTESTS) $(HEAP_PROFILER_UNITTESTS) \
                  $(HEAP_CHECKER_UNITTESTS)

bin_SCRIPTS = src/pprof

EXTRA_DIST = packages/rpm.sh packages/rpm/rpm.spec packages/deb.sh packages/deb \
             $(SCRIPTS) libtool


DISTCLEANFILES = src/google/perftools/hash_set.h
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libprofiler_la_LIBADD =
am__objects_1 =
am__objects_2 = $(am__objects_1) $(am__objects_1) $(am__objects_1)
am_libprofiler_la_OBJECTS = profiler.lo stacktrace.lo $(am__objects_2)
libprofiler_la_OBJECTS = $(am_libprofiler_la_OBJECTS)
libstacktrace_la_LIBADD =
am_libstacktrace_la_OBJECTS = stacktrace.lo $(am__objects_2)
libstacktrace_la_OBJECTS = $(am_libstacktrace_la_OBJECTS)
libtcmalloc_la_DEPENDENCIES = libstacktrace.la
am_libtcmalloc_la_OBJECTS = libtcmalloc_la-internal_logging.lo \
	libtcmalloc_la-system-alloc.lo libtcmalloc_la-tcmalloc.lo \
	libtcmalloc_la-malloc_hook.lo \
	libtcmalloc_la-malloc_extension.lo \
	libtcmalloc_la-maybe_threads.lo libtcmalloc_la-heap-profiler.lo \
	libtcmalloc_la-heap-checker.lo \
	libtcmalloc_la-heap-checker-bcad.lo linuxthreads.lo \
	thread_lister.lo $(am__objects_2)
libtcmalloc_la_OBJECTS = $(am_libtcmalloc_la_OBJECTS)
libtcmalloc_minimal_la_DEPENDENCIES = libstacktrace.la
am_libtcmalloc_minimal_la_OBJECTS = \
	libtcmalloc_minimal_la-internal_logging.lo \
	libtcmalloc_minimal_la-system-alloc.lo \
	libtcmalloc_minimal_la-tcmalloc.lo \
	libtcmalloc_minimal_la-malloc_hook.lo \
	libtcmalloc_minimal_la-malloc_extension.lo \
	libtcmalloc_minimal_la-maybe_threads.lo $(am__objects_2)
libtcmalloc_minimal_la_OBJECTS = $(am_libtcmalloc_minimal_la_OBJECTS)
noinst_PROGRAMS = stacktrace_unittest$(EXEEXT) malloc_unittest$(EXEEXT) \
	tcmalloc_unittest$(EXEEXT) tcmalloc_large_unittest$(EXEEXT) \
	ptmalloc_unittest1$(EXEEXT) ptmalloc_unittest2$(EXEEXT) \
	addressmap_unittest$(EXEEXT) profiler1_unittest$(EXEEXT) \
	profiler2_unittest$(EXEEXT) profiler3_unittest$(EXEEXT) \
	profiler4_unittest$(EXEEXT) heap-profiler_unittest$(EXEEXT) \
	heap-checker_unittest$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_addressmap_unittest_OBJECTS = \
	addressmap_unittest-addressmap_unittest.$(OBJEXT) \
	$(am__objects_1)
addressmap_unittest_OBJECTS = $(am_addressmap_unittest_OBJECTS)
addressmap_unittest_LDADD = $(LDADD)
addressmap_unittest_DEPENDENCIES =
addressmap_unittest_LDFLAGS =
am_heap_checker_unittest_OBJECTS = \
	heap_checker_unittest-heap-checker_unittest.$(OBJEXT) \
	$(am__objects_1)
heap_checker_unittest_OBJECTS = $(am_heap_checker_unittest_OBJECTS)
heap_checker_unittest_DEPENDENCIES =
am_heap_profiler_unittest_OBJECTS = \
	heap_profiler_unittest-heap-profiler_unittest.$(OBJEXT) \
	$(am__objects_1)
heap_profiler_unittest_OBJECTS = $(am_heap_profiler_unittest_OBJECTS)
heap_profiler_unittest_DEPENDENCIES = libtcmalloc.la
am_malloc_unittest_OBJECTS = malloc_unittest-tcmalloc_unittest.$(OBJEXT) \
	malloc_unittest-malloc_hook.$(OBJEXT) \
	malloc_unittest-malloc_extension.$(OBJEXT) \
	malloc_unittest-maybe_threads.$(OBJEXT) $(am__objects_3)
malloc_unittest_OBJECTS = $(am_malloc_unittest_OBJECTS)
malloc_unittest_DEPENDENCIES =
am__objects_4 = profiler1_unittest-profiler_unittest.$(OBJEXT) \
	$(am__objects_1)
am_profiler1_unittest_OBJECTS = $(am__objects_4)
profiler1_unittest_OBJECTS = $(am_profiler1_unittest_OBJECTS)
profiler1_unittest_DEPENDENCIES = libprofiler.la
profiler1_unittest_LDFLAGS =
am__objects_5 = profiler2_unittest-profiler_unittest.$(OBJEXT) \
	$(am__objects_1)
am_profiler2_unittest_OBJECTS = $(am__objects_5)
profiler2_unittest_OBJECTS = $(am_profiler2_unittest_OBJECTS)
profiler2_unittest_DEPENDENCIES =
profiler2_unittest_LDFLAGS =
am__objects_6 = profiler3_unittest-profiler_unittest.$(OBJEXT) \
	$(am__objects_1)
am_profiler3_unittest_OBJECTS = $(am__objects_6)
profiler3_unittest_OBJECTS = $(am_profiler3_unittest_OBJECTS)
profiler3_unittest_DEPENDENCIES = libprofiler.la
am__objects_7 = profiler4_unittest-profiler_unittest.$(OBJEXT) \
	$(am__objects_1)
am_profiler4_unittest_OBJECTS = $(am__objects_7)
profiler4_unittest_OBJECTS = $(am_profiler4_unittest_OBJECTS)
profiler4_unittest_DEPENDENCIES =
am_ptmalloc_unittest1_OBJECTS = ptmalloc_unittest1-t-test1.$(OBJEXT) \
	$(am__objects_1)
ptmalloc_unittest1_OBJECTS = $(am_ptmalloc_unittest1_OBJECTS)
ptmalloc_unittest1_DEPENDENCIES =
am_ptmalloc_unittest2_OBJECTS = ptmalloc_unittest2-t-test2.$(OBJEXT) \
	$(am__objects_1)
ptmalloc_unittest2_OBJECTS = $(am_ptmalloc_unittest2_OBJECTS)
ptmalloc_unittest2_DEPENDENCIES =
am__objects_8 = $(am__objects_2)
am_stacktrace_unittest_OBJECTS = stacktrace_unittest.$(OBJEXT) \
	$(am__objects_8)
stacktrace_unittest_OBJECTS = $(am_stacktrace_unittest_OBJECTS)
stacktrace_unittest_DEPENDENCIES = libstacktrace.la
stacktrace_unittest_LDFLAGS =
am_tcmalloc_large_unittest_OBJECTS = \
	tcmalloc_large_unittest-tcmalloc_large_unittest.$(OBJEXT)
tcmalloc_large_unittest_OBJECTS = $(am_tcmalloc_large_unittest_OBJECTS)
tcmalloc_large_unittest_DEPENDENCIES = libtcmalloc.la
am_tcmalloc_unittest_OBJECTS = \
	tcmalloc_unittest-tcmalloc_unittest.$(OBJEXT) $(am__objects_1)
tcmalloc_unittest_OBJECTS = $(am_tcmalloc_unittest_OBJECTS)
tcmalloc_unittest_DEPENDENCIES = libtcmalloc.la
SCRIPTS = $(bin_SCRIPTS) $(noinst_SCRIPTS)


DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/src
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = \
@AMDEP_TRUE@	./$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-heap-checker.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-heap-profiler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-internal_logging.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-malloc_extension.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-malloc_hook.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-maybe_threads.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-system-alloc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_la-tcmalloc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_minimal_la-internal_logging.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_minimal_la-malloc_extension.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_minimal_la-malloc_hook.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_minimal_la-maybe_threads.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_minimal_la-system-alloc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/linuxthreads.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/malloc_unittest-malloc_extension.Po \
@AMDEP_TRUE@	./$(DEPDIR)/malloc_unittest-malloc_hook.Po \
@AMDEP_TRUE@	./$(DEPDIR)/malloc_unittest-maybe_threads.Po \
@AMDEP_TRUE@	./$(DEPDIR)/malloc_unittest-tcmalloc_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/profiler.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/profiler1_unittest-profiler_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/profiler2_unittest-profiler_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/profiler3_unittest-profiler_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/profiler4_unittest-profiler_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ptmalloc_unittest1-t-test1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ptmalloc_unittest2-t-test2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/stacktrace.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/stacktrace_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po \
@AMDEP_TRUE@	./$(DEPDIR)/thread_lister.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(libprofiler_la_SOURCES) $(libstacktrace_la_SOURCES) \
	$(libtcmalloc_la_SOURCES) $(libtcmalloc_minimal_la_SOURCES) \
	$(addressmap_unittest_SOURCES) $(heap_checker_unittest_SOURCES) \
	$(heap_profiler_unittest_SOURCES) $(malloc_unittest_SOURCES) \
	$(profiler1_unittest_SOURCES) $(profiler2_unittest_SOURCES) \
	$(profiler3_unittest_SOURCES) $(profiler4_unittest_SOURCES) \
	$(ptmalloc_unittest1_SOURCES) $(ptmalloc_unittest2_SOURCES) \
	$(stacktrace_unittest_SOURCES) \
	$(tcmalloc_large_unittest_SOURCES) $(tcmalloc_unittest_SOURCES)

NROFF = nroff
MANS = $(dist_man_MANS)
DATA = $(dist_doc_DATA)

HEADERS = $(googleinclude_HEADERS) $(perftoolsinclude_HEADERS)

DIST_COMMON = README $(dist_doc_DATA) $(dist_man_MANS) \
	$(googleinclude_HEADERS) $(perftoolsinclude_HEADERS) \
	./src/config.h.in AUTHORS COPYING ChangeLog INSTALL Makefile.am \
	Makefile.in NEWS TODO aclocal.m4 compile config.guess \
	config.sub configure configure.ac depcomp install-sh ltmain.sh \
	missing mkinstalldirs
SOURCES = $(libprofiler_la_SOURCES) $(libstacktrace_la_SOURCES) $(libtcmalloc_la_SOURCES) $(libtcmalloc_minimal_la_SOURCES) $(addressmap_unittest_SOURCES) $(heap_checker_unittest_SOURCES) $(heap_profiler_unittest_SOURCES) $(malloc_unittest_SOURCES) $(profiler1_unittest_SOURCES) $(profiler2_unittest_SOURCES) $(profiler3_unittest_SOURCES) $(profiler4_unittest_SOURCES) $(ptmalloc_unittest1_SOURCES) $(ptmalloc_unittest2_SOURCES) $(stacktrace_unittest_SOURCES) $(tcmalloc_large_unittest_SOURCES) $(tcmalloc_unittest_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj

am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)

$(top_builddir)/config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure:  $(srcdir)/configure.ac $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

$(ACLOCAL_M4):  configure.ac 
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

src/config.h: src/stamp-h1
	@if test ! -f $@; then \
	  rm -f src/stamp-h1; \
	  $(MAKE) src/stamp-h1; \
	else :; fi

src/stamp-h1: $(srcdir)/./src/config.h.in $(top_builddir)/config.status
	@rm -f src/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h

$(srcdir)/./src/config.h.in:  $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/./src/config.h.in

distclean-hdr:
	-rm -f src/config.h src/stamp-h1
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
profiler.lo: src/profiler.cc
stacktrace.lo: src/stacktrace.cc
libprofiler.la: $(libprofiler_la_OBJECTS) $(libprofiler_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libprofiler_la_LDFLAGS) $(libprofiler_la_OBJECTS) $(libprofiler_la_LIBADD) $(LIBS)
libstacktrace.la: $(libstacktrace_la_OBJECTS) $(libstacktrace_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libstacktrace_la_LDFLAGS) $(libstacktrace_la_OBJECTS) $(libstacktrace_la_LIBADD) $(LIBS)
libtcmalloc_la-internal_logging.lo: src/internal_logging.cc
libtcmalloc_la-system-alloc.lo: src/system-alloc.cc
libtcmalloc_la-tcmalloc.lo: src/tcmalloc.cc
libtcmalloc_la-malloc_hook.lo: src/malloc_hook.cc
libtcmalloc_la-malloc_extension.lo: src/malloc_extension.cc
libtcmalloc_la-maybe_threads.lo: src/maybe_threads.cc
libtcmalloc_la-heap-profiler.lo: src/heap-profiler.cc
libtcmalloc_la-heap-checker.lo: src/heap-checker.cc
libtcmalloc_la-heap-checker-bcad.lo: src/heap-checker-bcad.cc
linuxthreads.lo: src/base/linuxthreads.c
thread_lister.lo: src/base/thread_lister.c
libtcmalloc.la: $(libtcmalloc_la_OBJECTS) $(libtcmalloc_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libtcmalloc_la_LDFLAGS) $(libtcmalloc_la_OBJECTS) $(libtcmalloc_la_LIBADD) $(LIBS)
libtcmalloc_minimal_la-internal_logging.lo: src/internal_logging.cc
libtcmalloc_minimal_la-system-alloc.lo: src/system-alloc.cc
libtcmalloc_minimal_la-tcmalloc.lo: src/tcmalloc.cc
libtcmalloc_minimal_la-malloc_hook.lo: src/malloc_hook.cc
libtcmalloc_minimal_la-malloc_extension.lo: src/malloc_extension.cc
libtcmalloc_minimal_la-maybe_threads.lo: src/maybe_threads.cc
libtcmalloc_minimal.la: $(libtcmalloc_minimal_la_OBJECTS) $(libtcmalloc_minimal_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libtcmalloc_minimal_la_LDFLAGS) $(libtcmalloc_minimal_la_OBJECTS) $(libtcmalloc_minimal_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
addressmap_unittest-addressmap_unittest.$(OBJEXT): \
	src/tests/addressmap_unittest.cc
addressmap_unittest$(EXEEXT): $(addressmap_unittest_OBJECTS) $(addressmap_unittest_DEPENDENCIES) 
	@rm -f addressmap_unittest$(EXEEXT)
	$(CXXLINK) $(addressmap_unittest_LDFLAGS) $(addressmap_unittest_OBJECTS) $(addressmap_unittest_LDADD) $(LIBS)
heap_checker_unittest-heap-checker_unittest.$(OBJEXT): \
	src/tests/heap-checker_unittest.cc
heap-checker_unittest$(EXEEXT): $(heap_checker_unittest_OBJECTS) $(heap_checker_unittest_DEPENDENCIES) 
	@rm -f heap-checker_unittest$(EXEEXT)
	$(CXXLINK) $(heap_checker_unittest_LDFLAGS) $(heap_checker_unittest_OBJECTS) $(heap_checker_unittest_LDADD) $(LIBS)
heap_profiler_unittest-heap-profiler_unittest.$(OBJEXT): \
	src/tests/heap-profiler_unittest.cc
heap-profiler_unittest$(EXEEXT): $(heap_profiler_unittest_OBJECTS) $(heap_profiler_unittest_DEPENDENCIES) 
	@rm -f heap-profiler_unittest$(EXEEXT)
	$(CXXLINK) $(heap_profiler_unittest_LDFLAGS) $(heap_profiler_unittest_OBJECTS) $(heap_profiler_unittest_LDADD) $(LIBS)
malloc_unittest-tcmalloc_unittest.$(OBJEXT): \
	src/tests/tcmalloc_unittest.cc
malloc_unittest-malloc_hook.$(OBJEXT): src/malloc_hook.cc
malloc_unittest-malloc_extension.$(OBJEXT): src/malloc_extension.cc
malloc_unittest-maybe_threads.$(OBJEXT): src/maybe_threads.cc
malloc_unittest$(EXEEXT): $(malloc_unittest_OBJECTS) $(malloc_unittest_DEPENDENCIES) 
	@rm -f malloc_unittest$(EXEEXT)
	$(CXXLINK) $(malloc_unittest_LDFLAGS) $(malloc_unittest_OBJECTS) $(malloc_unittest_LDADD) $(LIBS)
profiler1_unittest-profiler_unittest.$(OBJEXT): \
	src/tests/profiler_unittest.cc
profiler1_unittest$(EXEEXT): $(profiler1_unittest_OBJECTS) $(profiler1_unittest_DEPENDENCIES) 
	@rm -f profiler1_unittest$(EXEEXT)
	$(CXXLINK) $(profiler1_unittest_LDFLAGS) $(profiler1_unittest_OBJECTS) $(profiler1_unittest_LDADD) $(LIBS)
profiler2_unittest-profiler_unittest.$(OBJEXT): \
	src/tests/profiler_unittest.cc
profiler2_unittest$(EXEEXT): $(profiler2_unittest_OBJECTS) $(profiler2_unittest_DEPENDENCIES) 
	@rm -f profiler2_unittest$(EXEEXT)
	$(CXXLINK) $(profiler2_unittest_LDFLAGS) $(profiler2_unittest_OBJECTS) $(profiler2_unittest_LDADD) $(LIBS)
profiler3_unittest-profiler_unittest.$(OBJEXT): \
	src/tests/profiler_unittest.cc
profiler3_unittest$(EXEEXT): $(profiler3_unittest_OBJECTS) $(profiler3_unittest_DEPENDENCIES) 
	@rm -f profiler3_unittest$(EXEEXT)
	$(CXXLINK) $(profiler3_unittest_LDFLAGS) $(profiler3_unittest_OBJECTS) $(profiler3_unittest_LDADD) $(LIBS)
profiler4_unittest-profiler_unittest.$(OBJEXT): \
	src/tests/profiler_unittest.cc
profiler4_unittest$(EXEEXT): $(profiler4_unittest_OBJECTS) $(profiler4_unittest_DEPENDENCIES) 
	@rm -f profiler4_unittest$(EXEEXT)
	$(CXXLINK) $(profiler4_unittest_LDFLAGS) $(profiler4_unittest_OBJECTS) $(profiler4_unittest_LDADD) $(LIBS)
ptmalloc_unittest1-t-test1.$(OBJEXT): src/tests/ptmalloc/t-test1.c
ptmalloc_unittest1$(EXEEXT): $(ptmalloc_unittest1_OBJECTS) $(ptmalloc_unittest1_DEPENDENCIES) 
	@rm -f ptmalloc_unittest1$(EXEEXT)
	$(LINK) $(ptmalloc_unittest1_LDFLAGS) $(ptmalloc_unittest1_OBJECTS) $(ptmalloc_unittest1_LDADD) $(LIBS)
ptmalloc_unittest2-t-test2.$(OBJEXT): src/tests/ptmalloc/t-test2.c
ptmalloc_unittest2$(EXEEXT): $(ptmalloc_unittest2_OBJECTS) $(ptmalloc_unittest2_DEPENDENCIES) 
	@rm -f ptmalloc_unittest2$(EXEEXT)
	$(LINK) $(ptmalloc_unittest2_LDFLAGS) $(ptmalloc_unittest2_OBJECTS) $(ptmalloc_unittest2_LDADD) $(LIBS)
stacktrace_unittest.$(OBJEXT): src/tests/stacktrace_unittest.cc
stacktrace_unittest$(EXEEXT): $(stacktrace_unittest_OBJECTS) $(stacktrace_unittest_DEPENDENCIES) 
	@rm -f stacktrace_unittest$(EXEEXT)
	$(CXXLINK) $(stacktrace_unittest_LDFLAGS) $(stacktrace_unittest_OBJECTS) $(stacktrace_unittest_LDADD) $(LIBS)
tcmalloc_large_unittest-tcmalloc_large_unittest.$(OBJEXT): \
	src/tests/tcmalloc_large_unittest.cc
tcmalloc_large_unittest$(EXEEXT): $(tcmalloc_large_unittest_OBJECTS) $(tcmalloc_large_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_large_unittest$(EXEEXT)
	$(CXXLINK) $(tcmalloc_large_unittest_LDFLAGS) $(tcmalloc_large_unittest_OBJECTS) $(tcmalloc_large_unittest_LDADD) $(LIBS)
tcmalloc_unittest-tcmalloc_unittest.$(OBJEXT): \
	src/tests/tcmalloc_unittest.cc
tcmalloc_unittest$(EXEEXT): $(tcmalloc_unittest_OBJECTS) $(tcmalloc_unittest_DEPENDENCIES) 
	@rm -f tcmalloc_unittest$(EXEEXT)
	$(CXXLINK) $(tcmalloc_unittest_LDFLAGS) $(tcmalloc_unittest_OBJECTS) $(tcmalloc_unittest_LDADD) $(LIBS)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f"; \
	    $(binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-heap-checker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-heap-profiler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-internal_logging.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-malloc_extension.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-malloc_hook.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-maybe_threads.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-system-alloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_la-tcmalloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_minimal_la-internal_logging.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_minimal_la-malloc_extension.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_minimal_la-malloc_hook.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_minimal_la-maybe_threads.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_minimal_la-system-alloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linuxthreads.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malloc_unittest-malloc_extension.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malloc_unittest-malloc_hook.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malloc_unittest-maybe_threads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malloc_unittest-tcmalloc_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/profiler.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/profiler1_unittest-profiler_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/profiler2_unittest-profiler_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/profiler3_unittest-profiler_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/profiler4_unittest-profiler_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ptmalloc_unittest1-t-test1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ptmalloc_unittest2-t-test2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stacktrace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stacktrace_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_lister.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

linuxthreads.o: src/base/linuxthreads.c
@AMDEP_TRUE@	source='src/base/linuxthreads.c' object='linuxthreads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/linuxthreads.Po' tmpdepfile='$(DEPDIR)/linuxthreads.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o linuxthreads.o `test -f 'src/base/linuxthreads.c' || echo '$(srcdir)/'`src/base/linuxthreads.c

linuxthreads.obj: src/base/linuxthreads.c
@AMDEP_TRUE@	source='src/base/linuxthreads.c' object='linuxthreads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/linuxthreads.Po' tmpdepfile='$(DEPDIR)/linuxthreads.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o linuxthreads.obj `cygpath -w src/base/linuxthreads.c`

linuxthreads.lo: src/base/linuxthreads.c
@AMDEP_TRUE@	source='src/base/linuxthreads.c' object='linuxthreads.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/linuxthreads.Plo' tmpdepfile='$(DEPDIR)/linuxthreads.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o linuxthreads.lo `test -f 'src/base/linuxthreads.c' || echo '$(srcdir)/'`src/base/linuxthreads.c

thread_lister.o: src/base/thread_lister.c
@AMDEP_TRUE@	source='src/base/thread_lister.c' object='thread_lister.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/thread_lister.Po' tmpdepfile='$(DEPDIR)/thread_lister.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o thread_lister.o `test -f 'src/base/thread_lister.c' || echo '$(srcdir)/'`src/base/thread_lister.c

thread_lister.obj: src/base/thread_lister.c
@AMDEP_TRUE@	source='src/base/thread_lister.c' object='thread_lister.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/thread_lister.Po' tmpdepfile='$(DEPDIR)/thread_lister.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o thread_lister.obj `cygpath -w src/base/thread_lister.c`

thread_lister.lo: src/base/thread_lister.c
@AMDEP_TRUE@	source='src/base/thread_lister.c' object='thread_lister.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/thread_lister.Plo' tmpdepfile='$(DEPDIR)/thread_lister.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o thread_lister.lo `test -f 'src/base/thread_lister.c' || echo '$(srcdir)/'`src/base/thread_lister.c

ptmalloc_unittest1-t-test1.o: src/tests/ptmalloc/t-test1.c
@AMDEP_TRUE@	source='src/tests/ptmalloc/t-test1.c' object='ptmalloc_unittest1-t-test1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ptmalloc_unittest1-t-test1.Po' tmpdepfile='$(DEPDIR)/ptmalloc_unittest1-t-test1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ptmalloc_unittest1_CFLAGS) $(CFLAGS) -c -o ptmalloc_unittest1-t-test1.o `test -f 'src/tests/ptmalloc/t-test1.c' || echo '$(srcdir)/'`src/tests/ptmalloc/t-test1.c

ptmalloc_unittest1-t-test1.obj: src/tests/ptmalloc/t-test1.c
@AMDEP_TRUE@	source='src/tests/ptmalloc/t-test1.c' object='ptmalloc_unittest1-t-test1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ptmalloc_unittest1-t-test1.Po' tmpdepfile='$(DEPDIR)/ptmalloc_unittest1-t-test1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ptmalloc_unittest1_CFLAGS) $(CFLAGS) -c -o ptmalloc_unittest1-t-test1.obj `cygpath -w src/tests/ptmalloc/t-test1.c`

ptmalloc_unittest1-t-test1.lo: src/tests/ptmalloc/t-test1.c
@AMDEP_TRUE@	source='src/tests/ptmalloc/t-test1.c' object='ptmalloc_unittest1-t-test1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ptmalloc_unittest1-t-test1.Plo' tmpdepfile='$(DEPDIR)/ptmalloc_unittest1-t-test1.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ptmalloc_unittest1_CFLAGS) $(CFLAGS) -c -o ptmalloc_unittest1-t-test1.lo `test -f 'src/tests/ptmalloc/t-test1.c' || echo '$(srcdir)/'`src/tests/ptmalloc/t-test1.c

ptmalloc_unittest2-t-test2.o: src/tests/ptmalloc/t-test2.c
@AMDEP_TRUE@	source='src/tests/ptmalloc/t-test2.c' object='ptmalloc_unittest2-t-test2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ptmalloc_unittest2-t-test2.Po' tmpdepfile='$(DEPDIR)/ptmalloc_unittest2-t-test2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ptmalloc_unittest2_CFLAGS) $(CFLAGS) -c -o ptmalloc_unittest2-t-test2.o `test -f 'src/tests/ptmalloc/t-test2.c' || echo '$(srcdir)/'`src/tests/ptmalloc/t-test2.c

ptmalloc_unittest2-t-test2.obj: src/tests/ptmalloc/t-test2.c
@AMDEP_TRUE@	source='src/tests/ptmalloc/t-test2.c' object='ptmalloc_unittest2-t-test2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ptmalloc_unittest2-t-test2.Po' tmpdepfile='$(DEPDIR)/ptmalloc_unittest2-t-test2.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ptmalloc_unittest2_CFLAGS) $(CFLAGS) -c -o ptmalloc_unittest2-t-test2.obj `cygpath -w src/tests/ptmalloc/t-test2.c`

ptmalloc_unittest2-t-test2.lo: src/tests/ptmalloc/t-test2.c
@AMDEP_TRUE@	source='src/tests/ptmalloc/t-test2.c' object='ptmalloc_unittest2-t-test2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ptmalloc_unittest2-t-test2.Plo' tmpdepfile='$(DEPDIR)/ptmalloc_unittest2-t-test2.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ptmalloc_unittest2_CFLAGS) $(CFLAGS) -c -o ptmalloc_unittest2-t-test2.lo `test -f 'src/tests/ptmalloc/t-test2.c' || echo '$(srcdir)/'`src/tests/ptmalloc/t-test2.c
CCDEPMODE = @CCDEPMODE@

.cc.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cc.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cc.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

profiler.o: src/profiler.cc
@AMDEP_TRUE@	source='src/profiler.cc' object='profiler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler.Po' tmpdepfile='$(DEPDIR)/profiler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o profiler.o `test -f 'src/profiler.cc' || echo '$(srcdir)/'`src/profiler.cc

profiler.obj: src/profiler.cc
@AMDEP_TRUE@	source='src/profiler.cc' object='profiler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler.Po' tmpdepfile='$(DEPDIR)/profiler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o profiler.obj `cygpath -w src/profiler.cc`

profiler.lo: src/profiler.cc
@AMDEP_TRUE@	source='src/profiler.cc' object='profiler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler.Plo' tmpdepfile='$(DEPDIR)/profiler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o profiler.lo `test -f 'src/profiler.cc' || echo '$(srcdir)/'`src/profiler.cc

stacktrace.o: src/stacktrace.cc
@AMDEP_TRUE@	source='src/stacktrace.cc' object='stacktrace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stacktrace.Po' tmpdepfile='$(DEPDIR)/stacktrace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stacktrace.o `test -f 'src/stacktrace.cc' || echo '$(srcdir)/'`src/stacktrace.cc

stacktrace.obj: src/stacktrace.cc
@AMDEP_TRUE@	source='src/stacktrace.cc' object='stacktrace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stacktrace.Po' tmpdepfile='$(DEPDIR)/stacktrace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stacktrace.obj `cygpath -w src/stacktrace.cc`

stacktrace.lo: src/stacktrace.cc
@AMDEP_TRUE@	source='src/stacktrace.cc' object='stacktrace.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stacktrace.Plo' tmpdepfile='$(DEPDIR)/stacktrace.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stacktrace.lo `test -f 'src/stacktrace.cc' || echo '$(srcdir)/'`src/stacktrace.cc

libtcmalloc_la-internal_logging.o: src/internal_logging.cc
@AMDEP_TRUE@	source='src/internal_logging.cc' object='libtcmalloc_la-internal_logging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-internal_logging.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-internal_logging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-internal_logging.o `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc

libtcmalloc_la-internal_logging.obj: src/internal_logging.cc
@AMDEP_TRUE@	source='src/internal_logging.cc' object='libtcmalloc_la-internal_logging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-internal_logging.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-internal_logging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-internal_logging.obj `cygpath -w src/internal_logging.cc`

libtcmalloc_la-internal_logging.lo: src/internal_logging.cc
@AMDEP_TRUE@	source='src/internal_logging.cc' object='libtcmalloc_la-internal_logging.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-internal_logging.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-internal_logging.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-internal_logging.lo `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc

libtcmalloc_la-system-alloc.o: src/system-alloc.cc
@AMDEP_TRUE@	source='src/system-alloc.cc' object='libtcmalloc_la-system-alloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-system-alloc.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-system-alloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-system-alloc.o `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc

libtcmalloc_la-system-alloc.obj: src/system-alloc.cc
@AMDEP_TRUE@	source='src/system-alloc.cc' object='libtcmalloc_la-system-alloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-system-alloc.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-system-alloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-system-alloc.obj `cygpath -w src/system-alloc.cc`

libtcmalloc_la-system-alloc.lo: src/system-alloc.cc
@AMDEP_TRUE@	source='src/system-alloc.cc' object='libtcmalloc_la-system-alloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-system-alloc.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-system-alloc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-system-alloc.lo `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc

libtcmalloc_la-tcmalloc.o: src/tcmalloc.cc
@AMDEP_TRUE@	source='src/tcmalloc.cc' object='libtcmalloc_la-tcmalloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-tcmalloc.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-tcmalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-tcmalloc.o `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc

libtcmalloc_la-tcmalloc.obj: src/tcmalloc.cc
@AMDEP_TRUE@	source='src/tcmalloc.cc' object='libtcmalloc_la-tcmalloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-tcmalloc.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-tcmalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-tcmalloc.obj `cygpath -w src/tcmalloc.cc`

libtcmalloc_la-tcmalloc.lo: src/tcmalloc.cc
@AMDEP_TRUE@	source='src/tcmalloc.cc' object='libtcmalloc_la-tcmalloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-tcmalloc.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-tcmalloc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-tcmalloc.lo `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc

libtcmalloc_la-malloc_hook.o: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='libtcmalloc_la-malloc_hook.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-malloc_hook.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-malloc_hook.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-malloc_hook.o `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

libtcmalloc_la-malloc_hook.obj: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='libtcmalloc_la-malloc_hook.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-malloc_hook.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-malloc_hook.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-malloc_hook.obj `cygpath -w src/malloc_hook.cc`

libtcmalloc_la-malloc_hook.lo: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='libtcmalloc_la-malloc_hook.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-malloc_hook.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-malloc_hook.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-malloc_hook.lo `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

libtcmalloc_la-malloc_extension.o: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='libtcmalloc_la-malloc_extension.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-malloc_extension.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-malloc_extension.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-malloc_extension.o `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

libtcmalloc_la-malloc_extension.obj: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='libtcmalloc_la-malloc_extension.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-malloc_extension.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-malloc_extension.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-malloc_extension.obj `cygpath -w src/malloc_extension.cc`

libtcmalloc_la-malloc_extension.lo: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='libtcmalloc_la-malloc_extension.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-malloc_extension.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-malloc_extension.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-malloc_extension.lo `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

libtcmalloc_la-maybe_threads.o: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='libtcmalloc_la-maybe_threads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-maybe_threads.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-maybe_threads.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-maybe_threads.o `test -f 'src/maybe_threads.cc' || echo '$(srcdir)/'`src/maybe_threads.cc

libtcmalloc_la-maybe_threads.obj: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='libtcmalloc_la-maybe_threads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-maybe_threads.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-maybe_threads.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-maybe_threads.obj `cygpath -w src/maybe_threads.cc`

libtcmalloc_la-maybe_threads.lo: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='libtcmalloc_la-maybe_threads.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-maybe_threads.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-maybe_threads.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-maybe_threads.lo `test -f 'src/maybe_threads.cc' || echo '$(srcdir)/'`src/maybe_threads.cc

libtcmalloc_la-heap-profiler.o: src/heap-profiler.cc
@AMDEP_TRUE@	source='src/heap-profiler.cc' object='libtcmalloc_la-heap-profiler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-profiler.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-profiler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-profiler.o `test -f 'src/heap-profiler.cc' || echo '$(srcdir)/'`src/heap-profiler.cc

libtcmalloc_la-heap-profiler.obj: src/heap-profiler.cc
@AMDEP_TRUE@	source='src/heap-profiler.cc' object='libtcmalloc_la-heap-profiler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-profiler.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-profiler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-profiler.obj `cygpath -w src/heap-profiler.cc`

libtcmalloc_la-heap-profiler.lo: src/heap-profiler.cc
@AMDEP_TRUE@	source='src/heap-profiler.cc' object='libtcmalloc_la-heap-profiler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-profiler.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-profiler.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-profiler.lo `test -f 'src/heap-profiler.cc' || echo '$(srcdir)/'`src/heap-profiler.cc

libtcmalloc_la-heap-checker.o: src/heap-checker.cc
@AMDEP_TRUE@	source='src/heap-checker.cc' object='libtcmalloc_la-heap-checker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-checker.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-checker.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-checker.o `test -f 'src/heap-checker.cc' || echo '$(srcdir)/'`src/heap-checker.cc

libtcmalloc_la-heap-checker.obj: src/heap-checker.cc
@AMDEP_TRUE@	source='src/heap-checker.cc' object='libtcmalloc_la-heap-checker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-checker.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-checker.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-checker.obj `cygpath -w src/heap-checker.cc`

libtcmalloc_la-heap-checker.lo: src/heap-checker.cc
@AMDEP_TRUE@	source='src/heap-checker.cc' object='libtcmalloc_la-heap-checker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-checker.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-checker.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-checker.lo `test -f 'src/heap-checker.cc' || echo '$(srcdir)/'`src/heap-checker.cc

libtcmalloc_la-heap-checker-bcad.o: src/heap-checker-bcad.cc
@AMDEP_TRUE@	source='src/heap-checker-bcad.cc' object='libtcmalloc_la-heap-checker-bcad.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-checker-bcad.o `test -f 'src/heap-checker-bcad.cc' || echo '$(srcdir)/'`src/heap-checker-bcad.cc

libtcmalloc_la-heap-checker-bcad.obj: src/heap-checker-bcad.cc
@AMDEP_TRUE@	source='src/heap-checker-bcad.cc' object='libtcmalloc_la-heap-checker-bcad.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-checker-bcad.obj `cygpath -w src/heap-checker-bcad.cc`

libtcmalloc_la-heap-checker-bcad.lo: src/heap-checker-bcad.cc
@AMDEP_TRUE@	source='src/heap-checker-bcad.cc' object='libtcmalloc_la-heap-checker-bcad.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_la-heap-checker-bcad.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_la-heap-checker-bcad.lo `test -f 'src/heap-checker-bcad.cc' || echo '$(srcdir)/'`src/heap-checker-bcad.cc

libtcmalloc_minimal_la-internal_logging.o: src/internal_logging.cc
@AMDEP_TRUE@	source='src/internal_logging.cc' object='libtcmalloc_minimal_la-internal_logging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-internal_logging.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-internal_logging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-internal_logging.o `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc

libtcmalloc_minimal_la-internal_logging.obj: src/internal_logging.cc
@AMDEP_TRUE@	source='src/internal_logging.cc' object='libtcmalloc_minimal_la-internal_logging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-internal_logging.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-internal_logging.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-internal_logging.obj `cygpath -w src/internal_logging.cc`

libtcmalloc_minimal_la-internal_logging.lo: src/internal_logging.cc
@AMDEP_TRUE@	source='src/internal_logging.cc' object='libtcmalloc_minimal_la-internal_logging.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-internal_logging.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-internal_logging.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-internal_logging.lo `test -f 'src/internal_logging.cc' || echo '$(srcdir)/'`src/internal_logging.cc

libtcmalloc_minimal_la-system-alloc.o: src/system-alloc.cc
@AMDEP_TRUE@	source='src/system-alloc.cc' object='libtcmalloc_minimal_la-system-alloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-system-alloc.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-system-alloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-system-alloc.o `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc

libtcmalloc_minimal_la-system-alloc.obj: src/system-alloc.cc
@AMDEP_TRUE@	source='src/system-alloc.cc' object='libtcmalloc_minimal_la-system-alloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-system-alloc.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-system-alloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-system-alloc.obj `cygpath -w src/system-alloc.cc`

libtcmalloc_minimal_la-system-alloc.lo: src/system-alloc.cc
@AMDEP_TRUE@	source='src/system-alloc.cc' object='libtcmalloc_minimal_la-system-alloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-system-alloc.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-system-alloc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-system-alloc.lo `test -f 'src/system-alloc.cc' || echo '$(srcdir)/'`src/system-alloc.cc

libtcmalloc_minimal_la-tcmalloc.o: src/tcmalloc.cc
@AMDEP_TRUE@	source='src/tcmalloc.cc' object='libtcmalloc_minimal_la-tcmalloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-tcmalloc.o `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc

libtcmalloc_minimal_la-tcmalloc.obj: src/tcmalloc.cc
@AMDEP_TRUE@	source='src/tcmalloc.cc' object='libtcmalloc_minimal_la-tcmalloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-tcmalloc.obj `cygpath -w src/tcmalloc.cc`

libtcmalloc_minimal_la-tcmalloc.lo: src/tcmalloc.cc
@AMDEP_TRUE@	source='src/tcmalloc.cc' object='libtcmalloc_minimal_la-tcmalloc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-tcmalloc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-tcmalloc.lo `test -f 'src/tcmalloc.cc' || echo '$(srcdir)/'`src/tcmalloc.cc

libtcmalloc_minimal_la-malloc_hook.o: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='libtcmalloc_minimal_la-malloc_hook.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_hook.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_hook.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-malloc_hook.o `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

libtcmalloc_minimal_la-malloc_hook.obj: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='libtcmalloc_minimal_la-malloc_hook.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_hook.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_hook.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-malloc_hook.obj `cygpath -w src/malloc_hook.cc`

libtcmalloc_minimal_la-malloc_hook.lo: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='libtcmalloc_minimal_la-malloc_hook.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_hook.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_hook.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-malloc_hook.lo `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

libtcmalloc_minimal_la-malloc_extension.o: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='libtcmalloc_minimal_la-malloc_extension.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_extension.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_extension.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-malloc_extension.o `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

libtcmalloc_minimal_la-malloc_extension.obj: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='libtcmalloc_minimal_la-malloc_extension.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_extension.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_extension.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-malloc_extension.obj `cygpath -w src/malloc_extension.cc`

libtcmalloc_minimal_la-malloc_extension.lo: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='libtcmalloc_minimal_la-malloc_extension.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_extension.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-malloc_extension.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-malloc_extension.lo `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

libtcmalloc_minimal_la-maybe_threads.o: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='libtcmalloc_minimal_la-maybe_threads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-maybe_threads.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-maybe_threads.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-maybe_threads.o `test -f 'src/maybe_threads.cc' || echo '$(srcdir)/'`src/maybe_threads.cc

libtcmalloc_minimal_la-maybe_threads.obj: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='libtcmalloc_minimal_la-maybe_threads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-maybe_threads.Po' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-maybe_threads.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-maybe_threads.obj `cygpath -w src/maybe_threads.cc`

libtcmalloc_minimal_la-maybe_threads.lo: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='libtcmalloc_minimal_la-maybe_threads.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/libtcmalloc_minimal_la-maybe_threads.Plo' tmpdepfile='$(DEPDIR)/libtcmalloc_minimal_la-maybe_threads.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtcmalloc_minimal_la_CXXFLAGS) $(CXXFLAGS) -c -o libtcmalloc_minimal_la-maybe_threads.lo `test -f 'src/maybe_threads.cc' || echo '$(srcdir)/'`src/maybe_threads.cc

addressmap_unittest-addressmap_unittest.o: src/tests/addressmap_unittest.cc
@AMDEP_TRUE@	source='src/tests/addressmap_unittest.cc' object='addressmap_unittest-addressmap_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po' tmpdepfile='$(DEPDIR)/addressmap_unittest-addressmap_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o addressmap_unittest-addressmap_unittest.o `test -f 'src/tests/addressmap_unittest.cc' || echo '$(srcdir)/'`src/tests/addressmap_unittest.cc

addressmap_unittest-addressmap_unittest.obj: src/tests/addressmap_unittest.cc
@AMDEP_TRUE@	source='src/tests/addressmap_unittest.cc' object='addressmap_unittest-addressmap_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/addressmap_unittest-addressmap_unittest.Po' tmpdepfile='$(DEPDIR)/addressmap_unittest-addressmap_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o addressmap_unittest-addressmap_unittest.obj `cygpath -w src/tests/addressmap_unittest.cc`

addressmap_unittest-addressmap_unittest.lo: src/tests/addressmap_unittest.cc
@AMDEP_TRUE@	source='src/tests/addressmap_unittest.cc' object='addressmap_unittest-addressmap_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/addressmap_unittest-addressmap_unittest.Plo' tmpdepfile='$(DEPDIR)/addressmap_unittest-addressmap_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(addressmap_unittest_CXXFLAGS) $(CXXFLAGS) -c -o addressmap_unittest-addressmap_unittest.lo `test -f 'src/tests/addressmap_unittest.cc' || echo '$(srcdir)/'`src/tests/addressmap_unittest.cc

heap_checker_unittest-heap-checker_unittest.o: src/tests/heap-checker_unittest.cc
@AMDEP_TRUE@	source='src/tests/heap-checker_unittest.cc' object='heap_checker_unittest-heap-checker_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po' tmpdepfile='$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_unittest_CXXFLAGS) $(CXXFLAGS) -c -o heap_checker_unittest-heap-checker_unittest.o `test -f 'src/tests/heap-checker_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-checker_unittest.cc

heap_checker_unittest-heap-checker_unittest.obj: src/tests/heap-checker_unittest.cc
@AMDEP_TRUE@	source='src/tests/heap-checker_unittest.cc' object='heap_checker_unittest-heap-checker_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Po' tmpdepfile='$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_unittest_CXXFLAGS) $(CXXFLAGS) -c -o heap_checker_unittest-heap-checker_unittest.obj `cygpath -w src/tests/heap-checker_unittest.cc`

heap_checker_unittest-heap-checker_unittest.lo: src/tests/heap-checker_unittest.cc
@AMDEP_TRUE@	source='src/tests/heap-checker_unittest.cc' object='heap_checker_unittest-heap-checker_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.Plo' tmpdepfile='$(DEPDIR)/heap_checker_unittest-heap-checker_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_checker_unittest_CXXFLAGS) $(CXXFLAGS) -c -o heap_checker_unittest-heap-checker_unittest.lo `test -f 'src/tests/heap-checker_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-checker_unittest.cc

heap_profiler_unittest-heap-profiler_unittest.o: src/tests/heap-profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/heap-profiler_unittest.cc' object='heap_profiler_unittest-heap-profiler_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o heap_profiler_unittest-heap-profiler_unittest.o `test -f 'src/tests/heap-profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-profiler_unittest.cc

heap_profiler_unittest-heap-profiler_unittest.obj: src/tests/heap-profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/heap-profiler_unittest.cc' object='heap_profiler_unittest-heap-profiler_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o heap_profiler_unittest-heap-profiler_unittest.obj `cygpath -w src/tests/heap-profiler_unittest.cc`

heap_profiler_unittest-heap-profiler_unittest.lo: src/tests/heap-profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/heap-profiler_unittest.cc' object='heap_profiler_unittest-heap-profiler_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.Plo' tmpdepfile='$(DEPDIR)/heap_profiler_unittest-heap-profiler_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(heap_profiler_unittest_CXXFLAGS) $(CXXFLAGS) -c -o heap_profiler_unittest-heap-profiler_unittest.lo `test -f 'src/tests/heap-profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/heap-profiler_unittest.cc

malloc_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_unittest.cc' object='malloc_unittest-tcmalloc_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-tcmalloc_unittest.Po' tmpdepfile='$(DEPDIR)/malloc_unittest-tcmalloc_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

malloc_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_unittest.cc' object='malloc_unittest-tcmalloc_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-tcmalloc_unittest.Po' tmpdepfile='$(DEPDIR)/malloc_unittest-tcmalloc_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-tcmalloc_unittest.obj `cygpath -w src/tests/tcmalloc_unittest.cc`

malloc_unittest-tcmalloc_unittest.lo: src/tests/tcmalloc_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_unittest.cc' object='malloc_unittest-tcmalloc_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-tcmalloc_unittest.Plo' tmpdepfile='$(DEPDIR)/malloc_unittest-tcmalloc_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-tcmalloc_unittest.lo `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

malloc_unittest-malloc_hook.o: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='malloc_unittest-malloc_hook.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-malloc_hook.Po' tmpdepfile='$(DEPDIR)/malloc_unittest-malloc_hook.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-malloc_hook.o `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

malloc_unittest-malloc_hook.obj: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='malloc_unittest-malloc_hook.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-malloc_hook.Po' tmpdepfile='$(DEPDIR)/malloc_unittest-malloc_hook.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-malloc_hook.obj `cygpath -w src/malloc_hook.cc`

malloc_unittest-malloc_hook.lo: src/malloc_hook.cc
@AMDEP_TRUE@	source='src/malloc_hook.cc' object='malloc_unittest-malloc_hook.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-malloc_hook.Plo' tmpdepfile='$(DEPDIR)/malloc_unittest-malloc_hook.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-malloc_hook.lo `test -f 'src/malloc_hook.cc' || echo '$(srcdir)/'`src/malloc_hook.cc

malloc_unittest-malloc_extension.o: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='malloc_unittest-malloc_extension.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-malloc_extension.Po' tmpdepfile='$(DEPDIR)/malloc_unittest-malloc_extension.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-malloc_extension.o `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

malloc_unittest-malloc_extension.obj: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='malloc_unittest-malloc_extension.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-malloc_extension.Po' tmpdepfile='$(DEPDIR)/malloc_unittest-malloc_extension.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-malloc_extension.obj `cygpath -w src/malloc_extension.cc`

malloc_unittest-malloc_extension.lo: src/malloc_extension.cc
@AMDEP_TRUE@	source='src/malloc_extension.cc' object='malloc_unittest-malloc_extension.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-malloc_extension.Plo' tmpdepfile='$(DEPDIR)/malloc_unittest-malloc_extension.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-malloc_extension.lo `test -f 'src/malloc_extension.cc' || echo '$(srcdir)/'`src/malloc_extension.cc

malloc_unittest-maybe_threads.o: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='malloc_unittest-maybe_threads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-maybe_threads.Po' tmpdepfile='$(DEPDIR)/malloc_unittest-maybe_threads.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-maybe_threads.o `test -f 'src/maybe_threads.cc' || echo '$(srcdir)/'`src/maybe_threads.cc

malloc_unittest-maybe_threads.obj: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='malloc_unittest-maybe_threads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-maybe_threads.Po' tmpdepfile='$(DEPDIR)/malloc_unittest-maybe_threads.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-maybe_threads.obj `cygpath -w src/maybe_threads.cc`

malloc_unittest-maybe_threads.lo: src/maybe_threads.cc
@AMDEP_TRUE@	source='src/maybe_threads.cc' object='malloc_unittest-maybe_threads.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/malloc_unittest-maybe_threads.Plo' tmpdepfile='$(DEPDIR)/malloc_unittest-maybe_threads.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(malloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o malloc_unittest-maybe_threads.lo `test -f 'src/maybe_threads.cc' || echo '$(srcdir)/'`src/maybe_threads.cc

profiler1_unittest-profiler_unittest.o: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler1_unittest-profiler_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler1_unittest-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/profiler1_unittest-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler1_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

profiler1_unittest-profiler_unittest.obj: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler1_unittest-profiler_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler1_unittest-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/profiler1_unittest-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler1_unittest-profiler_unittest.obj `cygpath -w src/tests/profiler_unittest.cc`

profiler1_unittest-profiler_unittest.lo: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler1_unittest-profiler_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler1_unittest-profiler_unittest.Plo' tmpdepfile='$(DEPDIR)/profiler1_unittest-profiler_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler1_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler1_unittest-profiler_unittest.lo `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

profiler2_unittest-profiler_unittest.o: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler2_unittest-profiler_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler2_unittest-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/profiler2_unittest-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler2_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

profiler2_unittest-profiler_unittest.obj: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler2_unittest-profiler_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler2_unittest-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/profiler2_unittest-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler2_unittest-profiler_unittest.obj `cygpath -w src/tests/profiler_unittest.cc`

profiler2_unittest-profiler_unittest.lo: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler2_unittest-profiler_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler2_unittest-profiler_unittest.Plo' tmpdepfile='$(DEPDIR)/profiler2_unittest-profiler_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler2_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler2_unittest-profiler_unittest.lo `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

profiler3_unittest-profiler_unittest.o: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler3_unittest-profiler_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler3_unittest-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/profiler3_unittest-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler3_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

profiler3_unittest-profiler_unittest.obj: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler3_unittest-profiler_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler3_unittest-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/profiler3_unittest-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler3_unittest-profiler_unittest.obj `cygpath -w src/tests/profiler_unittest.cc`

profiler3_unittest-profiler_unittest.lo: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler3_unittest-profiler_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler3_unittest-profiler_unittest.Plo' tmpdepfile='$(DEPDIR)/profiler3_unittest-profiler_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler3_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler3_unittest-profiler_unittest.lo `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

profiler4_unittest-profiler_unittest.o: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler4_unittest-profiler_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler4_unittest-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/profiler4_unittest-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler4_unittest-profiler_unittest.o `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

profiler4_unittest-profiler_unittest.obj: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler4_unittest-profiler_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler4_unittest-profiler_unittest.Po' tmpdepfile='$(DEPDIR)/profiler4_unittest-profiler_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler4_unittest-profiler_unittest.obj `cygpath -w src/tests/profiler_unittest.cc`

profiler4_unittest-profiler_unittest.lo: src/tests/profiler_unittest.cc
@AMDEP_TRUE@	source='src/tests/profiler_unittest.cc' object='profiler4_unittest-profiler_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/profiler4_unittest-profiler_unittest.Plo' tmpdepfile='$(DEPDIR)/profiler4_unittest-profiler_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(profiler4_unittest_CXXFLAGS) $(CXXFLAGS) -c -o profiler4_unittest-profiler_unittest.lo `test -f 'src/tests/profiler_unittest.cc' || echo '$(srcdir)/'`src/tests/profiler_unittest.cc

stacktrace_unittest.o: src/tests/stacktrace_unittest.cc
@AMDEP_TRUE@	source='src/tests/stacktrace_unittest.cc' object='stacktrace_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stacktrace_unittest.Po' tmpdepfile='$(DEPDIR)/stacktrace_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stacktrace_unittest.o `test -f 'src/tests/stacktrace_unittest.cc' || echo '$(srcdir)/'`src/tests/stacktrace_unittest.cc

stacktrace_unittest.obj: src/tests/stacktrace_unittest.cc
@AMDEP_TRUE@	source='src/tests/stacktrace_unittest.cc' object='stacktrace_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stacktrace_unittest.Po' tmpdepfile='$(DEPDIR)/stacktrace_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stacktrace_unittest.obj `cygpath -w src/tests/stacktrace_unittest.cc`

stacktrace_unittest.lo: src/tests/stacktrace_unittest.cc
@AMDEP_TRUE@	source='src/tests/stacktrace_unittest.cc' object='stacktrace_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/stacktrace_unittest.Plo' tmpdepfile='$(DEPDIR)/stacktrace_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stacktrace_unittest.lo `test -f 'src/tests/stacktrace_unittest.cc' || echo '$(srcdir)/'`src/tests/stacktrace_unittest.cc

tcmalloc_large_unittest-tcmalloc_large_unittest.o: src/tests/tcmalloc_large_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_large_unittest.cc' object='tcmalloc_large_unittest-tcmalloc_large_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po' tmpdepfile='$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_unittest_CXXFLAGS) $(CXXFLAGS) -c -o tcmalloc_large_unittest-tcmalloc_large_unittest.o `test -f 'src/tests/tcmalloc_large_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_large_unittest.cc

tcmalloc_large_unittest-tcmalloc_large_unittest.obj: src/tests/tcmalloc_large_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_large_unittest.cc' object='tcmalloc_large_unittest-tcmalloc_large_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Po' tmpdepfile='$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_unittest_CXXFLAGS) $(CXXFLAGS) -c -o tcmalloc_large_unittest-tcmalloc_large_unittest.obj `cygpath -w src/tests/tcmalloc_large_unittest.cc`

tcmalloc_large_unittest-tcmalloc_large_unittest.lo: src/tests/tcmalloc_large_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_large_unittest.cc' object='tcmalloc_large_unittest-tcmalloc_large_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.Plo' tmpdepfile='$(DEPDIR)/tcmalloc_large_unittest-tcmalloc_large_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_large_unittest_CXXFLAGS) $(CXXFLAGS) -c -o tcmalloc_large_unittest-tcmalloc_large_unittest.lo `test -f 'src/tests/tcmalloc_large_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_large_unittest.cc

tcmalloc_unittest-tcmalloc_unittest.o: src/tests/tcmalloc_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_unittest.cc' object='tcmalloc_unittest-tcmalloc_unittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po' tmpdepfile='$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o tcmalloc_unittest-tcmalloc_unittest.o `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc

tcmalloc_unittest-tcmalloc_unittest.obj: src/tests/tcmalloc_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_unittest.cc' object='tcmalloc_unittest-tcmalloc_unittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Po' tmpdepfile='$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o tcmalloc_unittest-tcmalloc_unittest.obj `cygpath -w src/tests/tcmalloc_unittest.cc`

tcmalloc_unittest-tcmalloc_unittest.lo: src/tests/tcmalloc_unittest.cc
@AMDEP_TRUE@	source='src/tests/tcmalloc_unittest.cc' object='tcmalloc_unittest-tcmalloc_unittest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.Plo' tmpdepfile='$(DEPDIR)/tcmalloc_unittest-tcmalloc_unittest.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tcmalloc_unittest_CXXFLAGS) $(CXXFLAGS) -c -o tcmalloc_unittest-tcmalloc_unittest.lo `test -f 'src/tests/tcmalloc_unittest.cc' || echo '$(srcdir)/'`src/tests/tcmalloc_unittest.cc
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

man1dir = $(mandir)/man1
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(man1dir)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst"; \
	  $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man1dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man1dir)/$$inst; \
	done
dist_docDATA_INSTALL = $(INSTALL_DATA)
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(docdir)
	@list='$(dist_doc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(dist_docDATA_INSTALL) $$d$$p $(DESTDIR)$(docdir)/$$f"; \
	  $(dist_docDATA_INSTALL) $$d$$p $(DESTDIR)$(docdir)/$$f; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(docdir)/$$f"; \
	  rm -f $(DESTDIR)$(docdir)/$$f; \
	done
googleincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-googleincludeHEADERS: $(googleinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(googleincludedir)
	@list='$(googleinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(googleincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(googleincludedir)/$$f"; \
	  $(googleincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(googleincludedir)/$$f; \
	done

uninstall-googleincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(googleinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(googleincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(googleincludedir)/$$f; \
	done
perftoolsincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-perftoolsincludeHEADERS: $(perftoolsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(perftoolsincludedir)
	@list='$(perftoolsinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(perftoolsincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(perftoolsincludedir)/$$f"; \
	  $(perftoolsincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(perftoolsincludedir)/$$f; \
	done

uninstall-perftoolsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(perftoolsinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(perftoolsincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(perftoolsincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = .
distdir = $(PACKAGE)-$(VERSION)

am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }

GZIP_ENV = --best
distcleancheck_listfiles = find . -type f -print

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkinstalldirs) $(distdir)/./src $(distdir)/doc $(distdir)/packages $(distdir)/packages/rpm $(distdir)/src $(distdir)/src/google $(distdir)/src/google/perftools $(distdir)/src/tests
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	$(am__remove_distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/=inst && pwd` \
	  && cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && (test `find $$dc_install_base -type f -print | wc -l` -le 1 \
	      || { echo "ERROR: files left after uninstall:" ; \
	           find $$dc_install_base -type f -print ; \
	           exit 1; } >&2 ) \
	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
	  && rm -f $(distdir).tar.gz \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
	  sed 'h;s/./=/g;p;x;p;x'
distcleancheck: distclean
	if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(MANS) $(DATA) \
		$(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) $(DESTDIR)$(man1dir) $(DESTDIR)$(docdir) $(DESTDIR)$(googleincludedir) $(DESTDIR)$(perftoolsincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-dist_docDATA install-googleincludeHEADERS \
	install-man install-perftoolsincludeHEADERS

install-exec-am: install-binSCRIPTS install-libLTLIBRARIES

install-info: install-info-am

install-man: install-man1

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf autom4te.cache
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binSCRIPTS uninstall-dist_docDATA \
	uninstall-googleincludeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-man \
	uninstall-perftoolsincludeHEADERS

uninstall-man: uninstall-man1

.PHONY: GTAGS all all-am check check-TESTS check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS dist \
	dist-all dist-gzip distcheck distclean distclean-compile \
	distclean-depend distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir dvi \
	dvi-am info info-am install install-am install-binSCRIPTS \
	install-data install-data-am install-dist_docDATA install-exec \
	install-exec-am install-googleincludeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-man1 \
	install-perftoolsincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-binSCRIPTS uninstall-dist_docDATA \
	uninstall-googleincludeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-man uninstall-man1 \
	uninstall-perftoolsincludeHEADERS

heap-profiler_unittest_sh: $(HEAP_PROFILER_UNITTESTS)
	$(top_srcdir)/src/tests/heap-profiler_unittest.sh . $(top_srcdir)/src
heap_checker_unittest_sh: $(HEAP_CHECKER_UNITTESTS)
	$(top_srcdir)/src/tests/heap-checker_unittest.sh . $(top_srcdir)/src

heap-checker-death_unittest:
	PPROF_PATH=$(top_srcdir)/src/pprof sh $(top_srcdir)/src/tests/heap-checker-death_unittest.sh
profiler_unittest_sh: $(PROFILER_UNITTESTS)
	$(top_srcdir)/src/tests/profiler_unittest.sh . $(top_srcdir)/src

rpm: dist-gzip packages/rpm.sh packages/rpm/rpm.spec
	@cd packages && ./rpm.sh ${PACKAGE} ${VERSION}

deb: dist-gzip packages/deb.sh packages/deb/*
	@cd packages && ./deb.sh ${PACKAGE} ${VERSION}

libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
