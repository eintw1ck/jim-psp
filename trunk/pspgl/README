Hi,

pspGL is a pure, minimal, hardware-accelerated implementation of something like
OpenGL for the Playstation Portable. Before you are able to compile it, you
need to set up a PSP toolchain and SDK as described on http://pspdev.org.

The exit() implementation in the psplibc is broken, please apply the patch at
the end of this file before building the SDK.

If you build on MacOS-X just open a shell and type:

   $ make && make -C test-egl clean install
   $ make && make -C test-glut clean install

For other operating systems the install rule probably won't work, please 
create a new install rule for your OS and sumbit the according patch.

All OpenGL-ES fixed-point commands are not implemented. Please take a look
in the GLES/gl.h header file for the OpenGL commands implemented additionally
to the minimum OpenGL-ES profile. Define PURE_GLES before including this file
if you want to switch off these extensions.

Texture objects are not implemented, glTexImage2D always binds the current 
texture. See the eglcube demo for an example.

Display lists are used internally, but not exposed to the GL API.

Vertex Arrays are supported, but only the interleaved native PSP vertex formats.
No repacking is done, vertex data pointers must be aligned to 16byte boundaries,
since they are passed directly to the DMA controller for maximum performance.

Only a minimum set of the core GLUT functions is implemented.

You find some debug functions to dump PSP GE command buffers, the GE register
set and the GE matrix stack to the memory stick in pspgl_misc.[hc]. In the
tools/ directory you find a rough disassembler for GE packets, maybe you find
this useful to debug your problems. Please note that still a lot of commands
are missing, please send patches if you enhance this functionality.

The files sce*.[hcS] are slightly modified versions from the PSP SDK, we 
maintain a local copy to avoid dependencies and make it easier to catch the
calls for debugging purposes.

All files are BSD-licensed, feel free to use it in free or commercial projects.
enjoy, have fun,

Holger Waechtler



-----------------cut here and apply this patch to pspdev/sdk--------------------

Index: sdk/libc/stdlib.c
===================================================================
--- sdk/libc/stdlib.c	(revision 800)
+++ sdk/libc/stdlib.c	(working copy)
@@ -251,7 +251,7 @@
 #endif
 
 
-#if 0
+#if F_exit
 /*
 **
 **  [func] - exit.
@@ -267,11 +267,10 @@
 {
   int i;
 
-  for (i = (__stdlib_exit_index - 1); i <= 0; --i) (__stdlib_exit_func[i])();
-  // wrong... have to do _exit rather... see abort.c
-  // but we should also provide a __process_atexit so the crt0 could call
-  // it when main() returns.
-  Exit(status);
+  for (i=(__stdlib_exit_index-1); i>=0; i--)
+	__stdlib_exit_func[i]();
+
+  _Exit(status);
 }
 #endif
 
Index: sdk/libc/Makefile.am
===================================================================
--- sdk/libc/Makefile.am	(revision 800)
+++ sdk/libc/Makefile.am	(working copy)
@@ -39,7 +39,7 @@
 	rewind.o skipatoi.o sscanf.o _stdio.o tmpfile.o tmpnam.o ungetc.o updatestdoutxy.o strerror.o \
 	__stdio_internals.o 
 
-STDLIB_OBJS = abs.o atexit.o atof.o bsearch.o div.o getenv.o _itoa.o labs.o \
+STDLIB_OBJS = abs.o atexit.o atof.o bsearch.o div.o exit.o getenv.o _itoa.o labs.o \
 	ldiv.o llabs.o lldiv.o _lltoa.o _ltoa.o rand.o setenv.o srand.o \
 	strtod.o strtol.o strtoul.o __assert_fail.o \
 	__stdlib_internals.o 
Index: sdk/libc/terminate.c
===================================================================
--- sdk/libc/terminate.c	(revision 800)
+++ sdk/libc/terminate.c	(working copy)
@@ -27,7 +27,7 @@
 }
 
 __attribute__((weak))
-void exit(int retval)
+void _Exit(int retval)
 {
 	while (1)
 		_exit(retval);
