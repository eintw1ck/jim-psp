#! /usr/local/bin/python
#
# Simple script to do dos2unix on files, and remove the execute bit.

import os
import sys
from string import split,join
from stat import *
import re

def dos2unix(data):
	return join(split(data, '\r\n'), '\n')

def main():
	re_isascii = re.compile('[ -~\r\n\t\f]+')

	for s in sys.argv[2:]:
		abspath = s
		if not os.path.exists(abspath):
			continue
		fp = open(abspath)
		head = fp.read(1024)
		match = re_isascii.match(head)
		if match:
			matchlen = match.end() - match.start()
		if len(head) == matchlen:
			data = head + fp.read()
			fp.close()
			newdata = dos2unix(data)
			if newdata != data:
				print 'Doing DOS->Unix EOL conversion for \'' + abspath + '\'.'
				newpath = abspath + '.@'
				f = open(newpath, 'w')
				f.write(newdata)
				f.close()
				os.unlink(abspath)
				os.rename(newpath, abspath)

				# Change the file mode to remove the executable bit
				mode = os.stat(abspath)[ST_MODE]
				if mode & (S_IXUSR|S_IXGRP|S_IXOTH):
					print 'Clearing execute permission bits for \'' + abspath + '\'.'
					os.chmod(abspath, mode & ~(S_IXUSR|S_IXGRP|S_IXOTH))

	os._exit(0)


if __name__ == '__main__':
	main()
	sys.exit(0)
